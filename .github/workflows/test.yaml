name: Secrets and Environment Variables

on:
  workflow_dispatch:

jobs:
  top-env-variables:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Read a Variable
        run: |
          echo "${{ vars.API_URL }}"
          echo "${{ vars.PROD_VAR }}"
          echo "${{ vars.API_URL_URL }}"

      - name: Read a Secret
        run: echo "My secret is ${{ secrets.PRODUCTION_SECRET }}"

      - name: Render vars as JSON and save to file
        run: |
          echo '${{ toJSON(vars) }}' > vars.json

      - name: Render secrets as JSON and save to file
        run: |
          echo '${{ toJSON(secrets) }}' > secrets.json

      - name: Create files with keys from vars and secrets
        run: |
          echo "Creating files with keys..."

          # Create keys.txt file from vars
          echo '${{ toJSON(vars) }}' | jq -r 'keys[]' > vars_keys.txt

          # Create keys.txt file from secrets
          echo '${{ toJSON(secrets) }}' | jq -r 'keys[]' > secrets_keys.txt

      - name: Append vars to .env file
        run: |
          echo "Appending vars to .env file..."

          # Check if .env file exists, create if not
          if [ ! -f .env ]; then
            echo "Creating .env file..."
            touch .env
          fi

          # Loop through keys in vars_keys.txt and append to .env
          while IFS= read -r key; do
            echo "${key}=\${{ vars.${key} }}" >> .env
          done < vars_keys.txt

      - name: Append secrets to .env file
        run: |
          echo "Appending secrets to .env file..."

          # Loop through keys in secrets_keys.txt and append to .env
          while IFS= read -r key; do
            echo "${key}=\${{ secrets.${key} }}" >> .env
          done < secrets_keys.txt

      - name: Display .env file contents
        run: |
          echo "Contents of .env file:"
          cat .env
