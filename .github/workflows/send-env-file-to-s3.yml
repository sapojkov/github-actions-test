name: Upload-.env-to-S3

on:
  workflow_dispatch:
    inputs:
      staging_environment:
        description: "The environment for deployment (e.g., staging, production)"
        required: true
        type: choice
        options:
          - stage1
          - stage2
          - stage3
          - stage4
          - prod-lite
          - Production

jobs:
  generate-env-file-infrastructure:
    runs-on: ubuntu-latest
    environment: ${{ inputs.staging_environment }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Render vars as JSON and save to file
        run: |
          echo '${{ toJSON(vars) }}' > vars.json

      - name: Create .env file from vars.json
        run: |
          jq -r 'to_entries | .[] | "\(.key)=\(.value)"' vars.json > ${{ inputs.staging_environment }}-infrastructure.env

      - name: List files in workspace
        run: ls -l

      - name: Upload .env file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.staging_environment }}-infrastructure-env
          path: ${{ inputs.staging_environment }}-infrastructure.env

  generate-env-file-integration:
    runs-on: ubuntu-latest
    environment: ${{ inputs.staging_environment }}-backend-integration

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Render vars as JSON and save to file
        run: |
          echo '${{ toJSON(vars) }}' > vars.json

      - name: Create .env file from vars.json
        run: |
          jq -r 'to_entries | .[] | "\(.key)=\(.value)"' vars.json > ${{ inputs.staging_environment }}-integration.env

      - name: List files in workspace
        run: ls -l

      - name: Upload .env file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.staging_environment }}-integration-env
          path: ${{ inputs.staging_environment }}-integration.env

  combine-and-upload:
    needs: [generate-env-file-infrastructure, generate-env-file-integration]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: env_files
          merge-multiple: true

      - name: List files in env_files directory
        run: ls -l ./env_files

      - name: Combine .env files and remove duplicates
        run: |
          cat env_files/*.env | awk -F= '!seen[$1]++' > ${{ inputs.staging_environment }}-test.env
          echo *************************************************************
          cat ${{ inputs.staging_environment }}-test.env
          echo *************************************************************

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_BACKEND_DEPLOY_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_BACKEND_DEPLOY_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ vars.AWS_REGION }}

      # - name: Enable S3 bucket versioning
      #   run: |
      #     echo "Enabling versioning on S3 bucket..."
      #     aws s3api put-bucket-versioning --bucket ${{ vars.AWS_S3_ENV_BUCKET_NAME }} --versioning-configuration Status=Enabled

      # - name: Upload .env file to S3
      #   run: |
      #     echo "Uploading .env file to S3..."
      #     aws s3 cp ${{ inputs.staging_environment }}.env s3://${{ vars.AWS_S3_ENV_BUCKET_NAME }}/${{ inputs.staging_environment }}.env --sse
